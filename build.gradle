
// buildScript 작성  <- 이 부분은 무엇인지 모르겠음
buildscript {

    // extra 부분에서는 spring 버전과 boot / lombok에 대한 경로를 계속해서 쓸꺼기 때문에 변수로 할당 해놓는다.
    // 진행할때 gradle 버전이 8.5였다. 8.5는 spring boot 2.7 부터 지원해서 강의에서 진행되는 버전인 2.4에서 업그레이드 해서 이용한다.
    ext {
        spring = "2.7.0"
        boot = "org.springframework.boot"
        lombok = "org.projectlombok:lombok"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        // 빌드할때 gradle을 이용하기때문에 잡아 놓은 부분
        classpath("$boot:spring-boot-gradle-plugin:$spring")
    }
}


// 전체 프로젝트에 적용할 부분들
allprojects {

    //공통으로 쓰게될 group 아이디와 version을 명시
    group = "com.sp.fc"
    version = "1.0.0"
}


// 하위 프로젝트에서 적용될 부분들
subprojects {

    // settings.gradle을 통해 패키지에 따라 프로젝트 폴더 구성은 끝났지만 src와 resource 폴더는 인식이 안되어있는 상황
    // 이때 java 플러그인을 이용하면 해당 경로를 잘 잡아주는걸 확인할 수 있다.
    apply plugin: "java"
    apply plugin: boot
    apply plugin: "io.spring.dependency-management"
    apply plugin: "idea"

    repositories {
        mavenCentral()
    }

    configurations {

        // 초반 devtools를 활성화할때 로그인이 문제가 되기때문에 해당 부분을 막는다고 한다.
        //developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencies {

        // 초반 devtools를 활성화할때 로그인이 문제가 되기때문에 해당 부분을 막는다고 한다.
        //developmentOnly("$boot:spring-boot-devtools")
        implementation "$boot:spring-boot-starter-security"
        implementation 'com.fasterxml.jackson.core:jackson-annotations'

        compileOnly lombok
        testCompileOnly lombok
        annotationProcessor lombok
        testAnnotationProcessor lombok

        testImplementation "$boot:spring-boot-starter-test"
    }

    test {
        useJUnitPlatform()
    }

}


["comp", "web"].each {
    def subProjectDir = new File(projectDir, it)
    subProjectDir.eachDir {dir->
        def projectName = ":${it}-${dir.name}"
        project(projectName){
            bootJar.enabled(false) // componnet 프로젝트에서는 boot application을 만들지 않을 거기 때문에 해당 옵션을 꺼놓는다.
            jar.enabled(true)
        }
    }
}
["server"].each {
    def subProjectDir = new File(projectDir, it)
    subProjectDir.eachDir {dir->
        def projectName = ":${it}-${dir.name}"
        project(projectName){

        }
    }
}

help.enabled(false)